(define inspect-procedures
  (list (list 'eval eval)
        (list 'apply apply)
        (list 'list-of-values list-of-values)
        (list 'eval-if eval-if)
        (list 'eval-sequence eval-sequence)
        (list 'eval-assignment eval-assignment)
        (list 'enclosing-environment enclosing-environment)
        (list 'first-frame first-frame)
        (list 'make-frame make-frame)
        (list 'frame-variables frame-variables)
        (list 'frame-values frame-values)
        (list 'add-binding-to-frame! add-binding-to-frame!)
        (list 'extend-environment extend-environment)
        (list 'lookup-variable-value lookup-variable-value)
        (list 'set-variable-value! set-variable-value!)
        (list 'self-evaluating? self-evaluating?)
        (list 'variable? variable?)
        (list 'quoted? quoted?)
        (list 'text-of-quotation text-of-quotation)
        (list 'tagged-list? tagged-list?)
        (list 'assignment? assignment?)
        (list 'assignment-variable assignment-variable)
        (list 'assignment-value assignment-value)
        (list 'definition? definition?)
        (list 'definition-variable definition-variable)
        (list 'definition-value definition-value)
        (list 'lambda? lambda?)
        (list 'lambda-parameters lambda-parameters)
        (list 'lambda-body lambda-body)
        (list 'make-lambda make-lambda)
        (list 'if? if?)
        (list 'if-predicate if-predicate)
        (list 'if-consequent if-consequent)
        (list 'if-alternative if-alternative)
        (list 'make-if make-if)
        (list 'begin? begin?)
        (list 'begin-actions begin-actions)
        (list 'last-exp? last-exp?)
        (list 'first-exp first-exp)
        (list 'rest-exps rest-exps)
        (list 'sequence->exp sequence->exp)
        (list 'make-begin make-begin)
        (list 'application? application?)
        (list 'operator operator)
        (list 'operands operands)
        (list 'no-operands? no-operands?)
        (list 'first-operand first-operand)
        (list 'rest-operands rest-operands)
        (list 'true? true?)
        (list 'false? false?)
        (list 'make-procedure make-procedure)
        (list 'compound-procedure? compound-procedure?)
        (list 'procedure-parameters procedure-parameters)
        (list 'procedure-body procedure-body)
        (list 'procedure-environment procedure-environment)
        (list 'primitive-procedure? primitive-procedure?)
        (list 'primitive-implementation primitive-implementation)
        (list 'primitive-procedure-names primitive-procedure-names)
        (list 'primitive-procedure-objects primitive-procedure-objects)
        (list 'apply-primitive-procedure apply-primitive-procedure)))